apiVersion: apps/v1
kind: Deployment
metadata:
  name: vmproject-api-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vmproject-api-dev
  template:
    metadata:
      labels:
        app: vmproject-api-dev
    spec:
      containers:
      - name: vmproject-api-dev
        env:
        - name: APSNETCORE_ENVIRONMENT
          value: Development
        image: gcr.io/constellation-275522/vmproject
        ports:
        - containerPort: 80        
        resources:
          limits:
            cpu: ".5"
            memory: "500Mi"
          requests:
            cpu: ".25"
            memory: "250Mi"
          livenessProbe:
            httpGet:
              path: /api/liveprobe
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 3        
---
apiVersion: v1
kind: Service
metadata:
  name: vmproject-api-dev
spec:
  selector:
    app: vmproject-api-dev
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80    
---
apiVersion: v1
kind: Service
metadata:
  name: vmproject-api-dev-nodeport
spec:
  selector:
    app: vmproject-api-dev
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: vmproject-api-dev-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: vmproject-api-dev
    networking.gke.io/managed-certificates: vmproject-api-dev-certificate-2
#    kubernetes.io/ingress.allow-http: "false"
spec:
  backend:
    serviceName: vmproject-api-dev-nodeport
    servicePort: 80
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: vmproject-api-dev-certificate-2
spec:
  domains:
    - dev-vm-api.citwdd.net
